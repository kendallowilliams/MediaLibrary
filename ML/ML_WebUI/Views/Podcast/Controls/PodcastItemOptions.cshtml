@model PodcastItem
    
@{ 

}

<div class="d-flex flex-column" data-podcast-item-options="@(Model.Id)">
    @if (!Model.LastPlayedDate.HasValue)
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-mark-played-action="@(Url.Action(nameof(PodcastController.MarkPodcastItemPlayed), "Podcast"))"
                data-podcast-action="mark-played" data-item-id="@(Model.Id)">Mark as played</button>
    }
    else
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-mark-played-action="@(Url.Action(nameof(PodcastController.MarkPodcastItemUnplayed), "Podcast"))"
                data-podcast-action="mark-played" data-item-id="@(Model.Id)">Mark as unplayed</button>
    }

    @if (string.IsNullOrWhiteSpace(Model.File))
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-download-action="@(Url.Action(nameof(PodcastController.DownloadPodcastItem), "Podcast"))"
                data-podcast-action="download" data-item-id="@(Model.Id)">Download</button>
    }
    else
    {
        <button class="btn btn-sm btn-outline-secondary mb-1" data-download-action="@(Url.Action(nameof(PodcastController.RemovePodcastItemDownload), "Podcast"))"
                data-podcast-action="download" data-item-id="@(Model.Id)">Remove Download</button>
    }
</div>