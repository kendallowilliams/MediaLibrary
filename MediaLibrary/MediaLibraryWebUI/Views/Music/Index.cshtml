@model MediaLibraryWebUI.Models.MusicViewModel

<div class="h-100 d-flex flex-column">
    <div style="flex: 0 0 auto">
        <h2>Music</h2>
        <div class="nav d-block" id="musicTab" role="tablist">
            <a class="btn btn-outline-secondary" id="albums-tab" data-toggle="tab"
                    role="tab" aria-controls="albums" aria-selected="true" title="@(nameof(Enums.MusicTabs.Albums))" data-music-tab="@(nameof(Enums.MusicTabs.Albums))"
                    data-tooltip="tooltip" href="#albums">
                <i class="fa fa-compact-disc"></i>
            </a>
            <a class="btn btn-outline-secondary" id="artists-tab" data-toggle="tab"
                    role="tab" aria-controls="artists" aria-selected="false" title="@(nameof(Enums.MusicTabs.Artists))" data-music-tab="@(nameof(Enums.MusicTabs.Artists))"
                    data-tooltip="tooltip" href="#artists">
                <i class="fa fa-user"></i>
            </a>
            <a class="btn btn-outline-secondary" id="songs-tab" data-toggle="tab"
                    role="tab" aria-controls="songs" aria-selected="false" title="@(nameof(Enums.MusicTabs.Songs))" data-music-tab="@(nameof(Enums.MusicTabs.Songs))"
                    data-tooltip="tooltip" href="#songs">
                <i class="fa fa-music"></i>
            </a>
            <div class="float-right d-none d-lg-block">
                <button type="button" class="btn btn-outline-secondary" data-toggle="modal" data-target="#modalAddNewSong" data-tooltip="tooltip" title="Add new song">
                    <i class="fa fa-plus"></i>
                </button>
                <button class="btn btn-outline-secondary" onclick="refreshClicked()" data-tooltip="tooltip" title="Check for new music"><i class="fa fa-sync"></i></button>
                @Html.DropDownListFor(x => x.Configuration.SelectedAlbumSort,
                                      Model.AlbumSortItems,
                                      null,
                                      new { @class = "custom-select border border-secondary" + (Model.Configuration.SelectedMusicTab == Enums.MusicTabs.Albums ? "" : " d-none"),
                                          style = "width: 135px",
                                          title = "Sort by",
                                          data_sort_tab = "albums-tab",
                                          onchange = $"sortChanged('{nameof(Model.Configuration.SelectedAlbumSort)}', this)",
                                          data_tooltip = "tooltip"
                                      })
                @Html.DropDownListFor(x => x.Configuration.SelectedArtistSort,
                                      Model.ArtistSortItems,
                                      null,
                                      new { @class = "custom-select border border-secondary" + (Model.Configuration.SelectedMusicTab == Enums.MusicTabs.Artists ? "" : " d-none"),
                                          style = "width: 135px",
                                          title = "Sort by",
                                          data_sort_tab = "artists-tab",
                                          onchange = $"sortChanged('{nameof(Model.Configuration.SelectedArtistSort)}', this)",
                                          data_tooltip = "tooltip"
                                      })
                @Html.DropDownListFor(x => x.Configuration.SelectedSongSort,
                                      Model.SongSortItems,
                                      null,
                                      new { @class = "custom-select border border-secondary" + (Model.Configuration.SelectedMusicTab == Enums.MusicTabs.Songs ? "" : " d-none"),
                                          style = "width: 135px",
                                          title = "Sort by",
                                          data_sort_tab = "songs-tab",
                                          onchange = $"sortChanged('{nameof(Model.Configuration.SelectedSongSort)}', this)",
                                          data_tooltip = "tooltip"
                                      })
            </div>
        </div>
        <hr />
    </div>
    <div class="tab-content" id="musicContent" style="flex: 1 1 auto; overflow-y: auto">
        <div class="tab-pane fade" id="albums" role="tabpanel" aria-labelledby="albums-tab" data-load-url="@Url.Action("GetAlbums", "Music")"></div>
        <div class="tab-pane fade" id="artists" role="tabpanel" aria-labelledby="artists-tab" data-load-url="@Url.Action("GetArtists", "Music")"></div>
        <div class="tab-pane fade" id="songs" role="tabpanel" aria-labelledby="songs-tab" data-load-url="@Url.Action("GetSongs", "Music")"></div>
    </div>
</div>

@Html.Partial("~/Views/Shared/Modals/AddToPlaylistModal.cshtml", Model)
@Html.Partial("~/Views/Shared/Modals/AddNewSongModal.cshtml", Model)
@Html.Partial("~/Views/Shared/Modals/EditSongModal.cshtml")
@Html.Partial("~/Views/Shared/Configurations/MusicConfiguration.cshtml", Model.Configuration)

<script type="text/javascript" defer="defer">
    function sortChanged(sortType, select) {
        showLoading();
        $('#txt' + sortType).val($(select).val());
        updateConfiguration(() => loadView('@(nameof(Enums.MediaPages.Music))'));
    }

    function artistClicked(btn) {
        showLoading();
        $('#txt@(nameof(Model.Configuration.SelectedMusicPage))').val('@(nameof(Enums.MusicPages.Artist))');
        $('#txt@(nameof(Model.Configuration.SelectedArtistId))').val($(btn).attr('data-item-id'));
        updateConfiguration(() => loadView('@(nameof(Enums.MediaPages.Music))'));
    }

    function albumClicked(btn) {
        showLoading();
        $('#txt@(nameof(Model.Configuration.SelectedMusicPage))').val('@(nameof(Enums.MusicPages.Album))');
        $('#txt@(nameof(Model.Configuration.SelectedAlbumId))').val($(btn).attr('data-item-id'));
        updateConfiguration(() => loadView('@(nameof(Enums.MediaPages.Music))'));
    }

    function refreshClicked() {
        var success = () => hideLoading();

        showLoading();
        $.post('@(Url.Action("Refresh", "Music"))', success);

    }

    $('#musicTab [data-toggle="tab"]').on('show.bs.tab', function (e) {
        var $newTab = $(e.target),
            $oldTab = $(e.relatedTarget),
            $newView = $($newTab.attr('href')),
            $oldView = $($oldTab.attr('href'))
            url = $newView.attr('data-load-url'),
            success = () => {
                hideLoading();
                $newView.find('[data-tooltip="tooltip"]').tooltip({ trigger: "hover" });
            };
        
        $('[data-sort-tab]').each((index, _btn) => {
            if ($(_btn).attr('data-sort-tab') === $newTab.attr('id')) {
                $(_btn).removeClass('d-none');
            } else {
                $(_btn).addClass('d-none');
            }
        });

        showLoading();
        $('#txt@(nameof(Model.Configuration.SelectedMusicTab))').val($newTab.attr('data-music-tab'));
        $newView.find('[data-tooltip="tooltip"]').tooltip('dispose');
        updateConfiguration(() => $newView.load(url, success));
    });

    $('[data-music-tab="@(Model.Configuration.SelectedMusicTab)"]').tab('show');
</script>