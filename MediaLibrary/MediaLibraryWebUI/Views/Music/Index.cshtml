@model MediaLibraryWebUI.Models.MusicViewModel

@{
    ViewBag.Title = string.Empty;
}

<h2>Music</h2>
<div class="nav d-block" id="musicTab" role="tablist">
    <button class="btn btn-outline-secondary @(Model.Configuration.SelectedMusicTab == Enums.MusicTab.Albums ? "active" : "")" id="albums-tab" data-toggle="tab" href="#albums" role="tab" aria-controls="albums" aria-selected="true"
            title="Albums" onclick="showSort(this)">
        <i class="fa fa-compact-disc"></i>
    </button>
    <button class="btn btn-outline-secondary @(Model.Configuration.SelectedMusicTab == Enums.MusicTab.Artists ? "active" : "")" id="artists-tab" href="#artists" data-toggle="tab" role="tab" aria-controls="artists" aria-selected="false"
            title="Artists" onclick="showSort(this)">
        <i class="fa fa-user"></i>
    </button>
    <button class="btn btn-outline-secondary @(Model.Configuration.SelectedMusicTab == Enums.MusicTab.Songs ? "active" : "")" id="songs-tab" href="#songs" data-toggle="tab" role="tab" aria-controls="songs" aria-selected="false"
            title="Songs" onclick="showSort(this)">
        <i class="fa fa-music"></i>
    </button>
    <div class="float-right">
        <button class="btn btn-outline-secondary" onclick="$.get('@(Url.Action("Refresh", "Music"))')"><i class="fa fa-sync"></i></button>
        @Html.DropDownListFor(x => x.Configuration.SelectedAlbumSort,
                              Model.AlbumSortItems,
                              null,
                              new { @class = "custom-select border border-secondary" + (Model.Configuration.SelectedMusicTab == Enums.MusicTab.Albums ? "" : " d-none"),
                                  style = "width: 125px",
                                  title = "Sort by",
                                  data_sort_tab = "albums-tab" })
        @Html.DropDownListFor(x => x.Configuration.SelectedArtistSort,
                              Model.ArtistSortItems,
                              null,
                              new { @class = "custom-select border border-secondary" + (Model.Configuration.SelectedMusicTab == Enums.MusicTab.Artists ? "" : " d-none"),
                                  style = "width: 125px",
                                  title = "Sort by",
                                  data_sort_tab = "artists-tab" })
        @Html.DropDownListFor(x => x.Configuration.SelectedSongSort,
                              Model.SongSortItems,
                              null,
                              new { @class = "custom-select border border-secondary" + (Model.Configuration.SelectedMusicTab == Enums.MusicTab.Songs ? "" : " d-none"),
                                  style = "width: 125px",
                                  title = "Sort by",
                                  data_sort_tab = "songs-tab" })
    </div>
</div>
<hr />
<div class="tab-content" id="musicContent">
    <div class="tab-pane fade @(Model.Configuration.SelectedMusicTab == Enums.MusicTab.Albums ? "show active" : "")" id="albums" role="tabpanel" aria-labelledby="albums-tab">@Html.Partial("Albums", Model)</div>
    <div class="tab-pane fade @(Model.Configuration.SelectedMusicTab == Enums.MusicTab.Artists ? "show active" : "")" id="artists" role="tabpanel" aria-labelledby="artists-tab">@Html.Partial("Artists", Model)</div>
    <div class="tab-pane fade @(Model.Configuration.SelectedMusicTab == Enums.MusicTab.Songs ? "show active" : "")" id="songs" role="tabpanel" aria-labelledby="songs-tab">@Html.Partial("Songs", Model)</div>
</div>

@Html.BeginForm("UpdateConfiguration", "Music", FormMethod.Post, new { @class = "d-none" }) {
    @Html.HiddenFor(x => Model.Configuration.SelectedAlbumSort, new { });
    @Html.HiddenFor(x => Model.Configuration.SelectedSongSort, new { });
    @Html.HiddenFor(x => Model.Configuration.SelectedArtistSort, new { });
    @Html.HiddenFor(x => Model.Configuration.SelectedArtistId, new { });
    @Html.HiddenFor(x => Model.Configuration.SelectedAlbumId, new { });
    @Html.HiddenFor(x => Model.Configuration.SelectedMusicTab, new { });
}

@Html.Partial("~/Views/Shared/Modals/AddToPlaylistModal.cshtml", Model)

@section scripts {
    <script type="text/javascript">
        function showSort(btn) {
            $('[data-sort-tab]').each((index, _btn) => {
                if ($(_btn).attr('data-sort-tab') === btn.id) {
                    $(_btn).removeClass('d-none');
                } else {
                    $(_btn).addClass('d-none');
                }
            });
        }
    </script>
}