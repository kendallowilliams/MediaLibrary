@using MediaLibraryWebUI.Models.Configurations
@model MediaLibraryWebUI.Models.MediaLibraryViewModel

<div id="homeView" class="d-none"></div>
<div id="playerView" class="d-none h-100"></div>
<div id="divView" class="d-none h-100"></div>

@Html.Partial("~/Views/Shared/Configurations/MediaLibraryConfiguration.cshtml", Model.Configuration)

@section scripts {
    <script type="text/javascript" defer="defer">
        function loadView(view, callback) {
            var success = () => {
                if (typeof callback === 'function') /*then*/ callback();
                $(container + ' *[data-tooltip="tooltip"]').tooltip({ trigger: 'hover' });
                hideLoading();
            },
                url = '@Url.Action("Index", "ViewName")',
                container = null;

            collapseNavbar();
            showLoading();
            set@(nameof(MediaLibraryConfiguration))_@(nameof(MediaLibraryConfiguration.SelectedMediaPage))(view);
            disableNavItem(view);
            $('#divView, #playerView, #homeView').find('*[data-tooltip="tooltip"]').tooltip('dispose');

            if (view === '@(Enums.MediaPages.Player)') {
                updateMediaLibraryConfiguration(() => reload(success));
                $('#divView, #homeView').addClass('d-none');
                $(container = '#playerView').removeClass('d-none');
            } else if (view === '@(Enums.MediaPages.Home)') {
                $('#divView, #playerView').addClass('d-none');
                $(container = '#homeView').removeClass('d-none');
                update@(nameof(MediaLibraryConfiguration))(() => $('#homeView').load(url.replace("ViewName", view), success));
            } else {
                update@(nameof(MediaLibraryConfiguration))(() => $('#divView').load(url.replace("ViewName", view), success));
                $('#playerView, #homeView').addClass('d-none');
                $(container = '#divView').removeClass('d-none');
            }
        }

        $(function () {
            showLoading();
            $('#playerView').load('@Url.Action("Index", "Player")', () => {
                hideLoading();
                loadView('@(Model.Configuration.SelectedMediaPage.ToString())', () => setInitialPlayerUrl());
            });
        });
    </script>
}

