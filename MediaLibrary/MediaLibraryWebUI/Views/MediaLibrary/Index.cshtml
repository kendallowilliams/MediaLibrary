@model MediaLibraryWebUI.Models.MediaLibraryViewModel

@{
    ViewBag.Title = string.Empty;
}

<div id="playerView" class="d-none"></div>
<div id="divView" class="d-none"></div>

@Html.Partial("~/Views/Shared/Configurations/MediaLibraryConfiguration.cshtml", Model.Configuration)

@section scripts {
    <script type="text/javascript" defer="defer">
        function loadView(view, callback) {
            var success = () => {
                if (typeof callback === 'function') /*then*/ callback();
                if (view !== '@(Enums.MediaPages.Player)') /*then*/ $('#divView *[data-tooltip="tooltip"]').tooltip({ trigger: 'hover' });
                hideLoading();
            },
                url = '@Url.Action("Index", "ViewName")';

            showLoading();
            updateSelectedMediaPage(view);
            $('#divView *[data-tooltip="tooltip"]').tooltip('dispose');

            if (view === '@(Enums.MediaPages.Player)') {
                updateMediaLibraryConfiguration(() => reload(success));
                $('#divView').addClass('d-none');
                $('#playerView').removeClass('d-none');
            } else {
                updateMediaLibraryConfiguration(() => $('#divView').load(url.replace("ViewName", view), success));
                $('#playerView').addClass('d-none');
                $('#divView').removeClass('d-none');
            }
        }

        function reload(callback) {
            var success = () => {
                if (typeof callback === 'function') /*then*/ callback();
                $('#playerItems *[data-tooltip="tooltip"]').tooltip({ trigger: 'hover' });
            };

            $('#playerItems').load('@(Url.Action("GetPlayerItems", "Player"))', success);
        }

        $(function () {
            showLoading();
            $('#playerView').load('@Url.Action("Index", "Player")', () => {
                hideLoading();
                loadView('@(Model.Configuration.SelectedMediaPage.ToString())');
            });
        });
    </script>
}

