@using MediaLibraryWebUI.Models.Configurations
@model MediaLibraryWebUI.Models.TelevisionViewModel

<div class="h-100 d-flex flex-column">
    <div style="flex: 0 0 auto">
        <h2>Television</h2>
        <div>
            @Html.DropDownListFor(x => x.Configuration.SelectedSeriesSort,
                                  Model.SeriesSortItems,
                                  null,
                                  new { @class = "custom-select border border-secondary",
                                        style = "width: 150px",
                                        title = "Sort by",
                                        data_sort_tab = "albums-tab",
                                        onchange = $"sortChanged(this)",
                                        data_tooltip = "tooltip"
            })
        </div>
        <hr />
    </div>

    @if (Model.SeriesGroups.Any())
    {
        <div id="accordion-series" style="flex: 1 1 auto; overflow-y: auto">
            @foreach (var item in Model.SeriesGroups.Select((group, index) => new { Index = index, Group = group }))
            {
                <div class="card">
                    <div class="card-header" id="heading-series-@(item.Index)">
                        <h5 class="mb-0">
                            <button class="btn btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-series-@(item.Index)" aria-expanded="@(item.Index == 0 ? "true" : "false")" aria-controls="collapse-series-@(item.Index)">
                                @(item.Group.Key)
                            </button>
                        </h5>
                    </div>

                    <div id="collapse-series-@(item.Index)" class="collapse @(item.Index == 0 ? "show" : "")" aria-labelledby="heading-series-@(item.Index)" data-parent="#accordion-series">
                        <ul class="list-group list-group-flush">
                            @foreach (var series in item.Group)
                            {
                                <li class="list-group-item">
                                    <div class="media">
                                        <img class="mr-3 track-img" src="@(Url.Content("~/Content/images/audio.png"))" title="@(series.Title)">
                                        <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                            <h5 class="mt-0" style="flex: 0 0 auto; text-overflow: ellipsis; white-space: nowrap; overflow: hidden">@(series.Title)</h5>
                                            <span style="cursor: pointer; flex: 0 0 auto">@(series.Episodes.GroupBy(e => e.Season).Count()) season@(series.Episodes.GroupBy(e => e.Season).Count() == 1 ? string.Empty : "s")</span>
                                        </div>
                                        <div>
                                            <buton class="btn btn-outline-secondary" onclick="seriesClicked(this)" data-item-id="@(series.Id)"
                                                   data-tooltip="tooltip" title="View series">
                                                <i class="fa fa-list"></i>
                                            </buton>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div>No series.</div>
    }
</div>

<script type="text/javascript" defer="defer">
    function seriesClicked(btn) {
        showLoading();
        set@(nameof(TelevisionConfiguration))_@(nameof(TelevisionConfiguration.SelectedTelevisionPage))('@(nameof(Enums.TelevisionPages.Series))');
        set@(nameof(TelevisionConfiguration))_@(nameof(TelevisionConfiguration.SelectedSeriesId))($(btn).attr('data-item-id'));
        update@(nameof(TelevisionConfiguration))(() => loadView('@(nameof(Enums.MediaPages.Television))'));
    }

    function sortChanged(select) {
        showLoading();
        set@(nameof(TelevisionConfiguration))_@(nameof(TelevisionConfiguration.SelectedSeriesSort))($(select).val());
        update@(nameof(TelevisionConfiguration))(() => loadView('@(nameof(Enums.MediaPages.Television))'));
    }
</script>
