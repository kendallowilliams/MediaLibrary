@using MediaLibraryWebUI.Models.Configurations
@using MediaLibraryWebUI.Repositories
@model MediaLibraryWebUI.Models.TelevisionViewModel

<div class="d-flex flex-column" style="flex: 1 1 auto; overflow-y: auto">
    <div style="flex: 0 0 auto">
        <div class="d-flex flex-row">
            <div style="flex: 0 1 auto; overflow-x: auto">
                <h2 style="text-overflow: ellipsis; overflow: hidden; white-space: nowrap">@(Model.SelectedSeries.Title)</h2>
            </div>
        </div>
        <div>
            <button class="btn btn-outline-secondary" onclick="backClicked()" data-tooltip="tooltip" title="Go back"><i class="fa fa-arrow-circle-left"></i></button>
            <button class="btn btn-outline-secondary" onclick="getSeasonPlaylist()" data-tooltip="tooltip" title="Download M3U playlist"><i class="fa fa-download"></i></button>
        </div>
        <hr />
    </div>
    <div class="card" style="flex: 1 1 auto; overflow-y: auto">
        <div class="card-header" id="heading-series-@(Model.SelectedSeries.Id)" style="flex: 0 0 auto">
            <ul class="pagination justify-content-center m-0">
                <li class="page-item"><a class="page-link" href="javascript: void(0);" data-season-id="-">&laquo;</a></li>
                @foreach (var season in Model.SelectedSeries.Episodes.Select(episode => episode.Season).Distinct().OrderBy(season => season))
                {
                    <li class="page-item"><a class="page-link" href="javascript: void(0);" data-season-id="@(season)">@(season)</a></li>
                }
                <li class="page-item"><a class="page-link" href="javascript: void(0);" data-season-id="+">&raquo;</a></li>
            </ul>
        </div>
        <div class="card-body m-0 p-0" id="@(HtmlControlsRepository.SeasonViewId)" style="flex: 1 1 auto; overflow-y: auto"></div>
    </div>
</div>

<script type="text/javascript" defer="defer">
    function backClicked() {
        showLoading();
        set@(nameof(TelevisionConfiguration))_@(nameof(TelevisionConfiguration.SelectedTelevisionPage))('@(nameof(Enums.TelevisionPages.Index))');
        update@(nameof(TelevisionConfiguration))(() => loadView('@(nameof(Enums.MediaPages.Television))'));
    }

    function loadSeasonView(item) {
        var success = () => {
                $(item).parent('li.page-item:first').addClass('active');
                updateMobileSeasons(parseInt(season));
                loadTooltips($('#@(HtmlControlsRepository.SeasonViewId)')[0]);
                hideLoading();
            },
            series = @(Model.SelectedSeries.Id),
            season = $(item).attr('data-season-id');

        if (item) {
            showLoading();
            set@(nameof(TelevisionConfiguration))_@(nameof(TelevisionConfiguration.SelectedSeason))(season);
            disposeTooltips($('#@(HtmlControlsRepository.SeasonViewId)')[0]);
            $('#@(HtmlControlsRepository.SeasonViewId)').load('@Url.Action("GetSeason", "Television")', { series: series, season: season }, success);
        }
    }

    function updateMobileSeasons(season) {
        var minSeasonCount = @(Model.MinimumNumberOfSeasons),
            numItemsBefore = Math.floor(minSeasonCount / 2),
            numItemsAfter = minSeasonCount - numItemsBefore - 1,
            first = season - numItemsBefore,
            last = season + numItemsAfter,
            cssSelector = '[data-season-id]:not([data-season-id="+"]):not([data-season-id="-"]',
            numSeasons = $('').length;

        $(cssSelector).addClass('d-none d-lg-block');
        
        if (first < 1) {
            first = 1;
            last = minSeasonCount;
        } else if (last > numSeasons) {
            first = first - (last - numSeasons);
            last = season + (numSeasons - season);
        }

        for (var i = first; i <= last; i++) {
            $('[data-season-id="' + i + '"]').removeClass('d-none d-lg-block');
        }
    }

    $('[data-season-id]').on('click', function () {
        var id = $(this).attr('data-season-id'),
            selectedSeason = parseInt(get@(nameof(TelevisionConfiguration))_@(nameof(TelevisionConfiguration.SelectedSeason))());

        if (id === '-' && (selectedSeason - 1) > 0) {
            $('[data-season-id="' + (selectedSeason - 1) + '"]').trigger('click');
        } else if (id === '+' && (selectedSeason + 1) > 0) {
            $('[data-season-id="' + (selectedSeason + 1) + '"]').trigger('click');
        } else if (parseInt(id) > 0) {
            $('li.page-item').removeClass('active');
            loadSeasonView(this);
        }
    });

    function getSeasonPlaylist() {
        window.location = '@Url.Action("GetM3UPlaylist", "Television")?seriesId=' + getSelectedSeriesId() + '&season=' + getSelectedSeason();
    }

    $('[data-season-id="1"]').trigger('click');
</script>
