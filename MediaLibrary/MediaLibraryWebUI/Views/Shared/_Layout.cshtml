<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KOW Moosic @ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/popperjs")
    @Scripts.Render("~/bundles/bootstrap")
</head>
<body>
    <div class="container">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">
                <img src="@(Url.Content("~/Content/images/logo.png"))" title="KOW Moosic" />
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        @Html.ActionLink("Music",
                                         "Index",
                                         "Music",
                                         null,
                                         new { @class = "nav-link" + (Model.Configuration.SelectedMediaPage == Enums.MediaPages.Music ? " active" : string.Empty),
                                               onclick = "showLoading()" })
                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("Podcasts",
                                         "Index",
                                         "Podcast",
                                         null,
                                         new { @class = "nav-link" + (Model.Configuration.SelectedMediaPage == Enums.MediaPages.Podcasts ? " active" : string.Empty),
                                               onclick = "showLoading()" })
                    </li>
                    <li class="nav-item">
                        @Html.ActionLink("Playlists",
                                         "Index",
                                         "Playlist",
                                         null,
                                         new { @class = "nav-link" + (Model.Configuration.SelectedMediaPage == Enums.MediaPages.Playlists ? " active" : string.Empty),
                                               onclick = "showLoading()" })
                    </li>
                </ul>
            </div>
        </nav>
    </div>
    <br />
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p class="text-center">&copy; @DateTime.Now.Year - Kendall O. Williams</p>
        </footer>
    </div>

    @RenderSection("scripts", false)
    @Html.Partial("~/Views/Shared/Modals/LoadingModal.cshtml")

    <script type="text/javascript">
        var playerPopup = null;

        window.addEventListener("message", receiveMessage, false);
        window.onbeforeunload = evt => {
            if (playerPopup) {
                playerPopup.close();
            }
        };

        function receiveMessage(event) {
            if (event.origin !== "@(Request.Url.GetLeftPart(UriPartial.Authority))")
                return;

            if (event.data === '@(nameof(Enums.PlayerMessages.Loaded))') {

            }
        }

        function play(btn) {
            var $playButtons = $('button[data-play-id]'),
                $playGroups = $('div[data-play-ids]'),
                success = () => null,
                mediaType = $(btn).attr('data-media-type') || '@(nameof(Enums.MediaTypes.Song))',
                data = new FormData(),
                $playData = null;

            showLoading();

            if ($playGroups.length > 0) {
                $playData = $playGroups.map((index, element) => ($(element).attr('data-play-ids').split(',')))
                    .map((index, element) => ({
                        Id: index,
                        Value: parseInt(element),
                        IsSelected: $(btn).attr('data-play-id') === element
                    })
                );
            } else {
                $playData = $playButtons.map((index, _btn) => ({
                    Id: index,
                    Value: parseInt($(_btn).attr('data-play-id')),
                    IsSelected: btn.isSameNode(_btn)
                }));
            }

            data.append('mediaType', mediaType);
            data.append('itemsJSON', JSON.stringify($playData.get()));

            if (!playerPopup || playerPopup.closed) {
                success = () => {
                    playerPopup = window.open('@Url.Action("Index", "Player")', '@(Model.MusicPlayerId)');
                    hideLoading();
                }

            } else {
                success = () => {
                    playerPopup.postMessage('@(nameof(Enums.PlayerMessages.Reload))');
                    hideLoading();
                }
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("UpdateNowPlaying", "Playlist")',
                data: data,
                contentType: false,
                success: success,
                processData: false,
                traditional: true
            });
        }
    </script>

    <script type="text/javascript" defer="defer">
        $(function () {
            $('[data-toggle="popover"]').popover();
            $('[data-tooltip="tooltip"]').tooltip();
        });

        function showLoading() {
            $('#loadingModal').modal('show');
        }

        function hideLoading() {
            $('#loadingModal').modal('hide');
        }
    </script>
</body>
</html>