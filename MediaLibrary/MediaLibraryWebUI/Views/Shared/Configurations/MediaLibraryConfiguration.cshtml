@using MediaLibraryWebUI.Models.Configurations
@model MediaLibraryConfiguration

@{ 
    var properties = Model.GetType().GetProperties();
    string controller = "MediaLibrary",
           configuration = nameof(MediaLibraryConfiguration);
}

<div class="d-none">
    @foreach (var property in properties)
    {
        @Html.Hidden(property.Name, property.GetValue(Model), new { id = $"txt{configuration}_{property.Name}" });
    }
</div>

<script type="text/javascript" defer="defer">
    function update@(configuration)(success) {
        $.post('@Url.Action("UpdateConfiguration", controller)', get@(configuration)Data(), success);
    }
    
    @{
        var lines = properties.Select(property =>
        {
            string getter = $"var get{configuration}_{property.Name} = () => $('#txt{configuration}_{property.Name}').val();";
            string setter = $"var update{configuration}_{property.Name} = value =>  $('#txt{configuration}_{property.Name}').val(value);";

            return $"{getter}{Environment.NewLine}{setter}";
        });

        @Html.Raw(string.Join(Environment.NewLine, lines));
    }

    function get@(configuration)Data() {
        @{ 
            IEnumerable<string> data = properties.Select(property => $"'{property.Name}=' + $('#txt{configuration}_{property.Name}').val()");
        }
        return @Html.Raw(string.Join(" + '&' + ", data));
    }
</script>