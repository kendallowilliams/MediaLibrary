@model MediaLibraryWebUI.Models.PodcastViewModel

<div class="h-100 d-flex flex-column">
    <div style="flex: 0 0 auto">
        <h2>@(Model.SelectedPodcast.Title) podcast</h2>
        <div>
            <button class="btn btn-outline-secondary" onclick="backClicked()" data-tooltip="tooltip" title="Go back"><i class="fa fa-arrow-circle-left"></i></button>
            <button class="btn btn-outline-secondary" onclick="refreshClicked()" data-tooltip="tooltip" title="Refresh podcast"><i class="fa fa-sync"></i></button>
            <button class="btn btn-outline-danger" data-delete="enabled" data-delete-action="@(Url.Action("RemovePodcast","Podcast", new { Model.SelectedPodcast.Id }))"
                    data-tooltip="tooltip" title="Delete podcast" data-refresh-view="@(nameof(Enums.MediaPages.Podcast))" data-delete-type="podcast">
                <i class="fa fa-trash"></i>
            </button>
        </div>
        <hr />
    </div>
    <div class="card" style="flex: 1 1 auto; overflow-y: auto">
        <div class="card-header" id="heading-podcast-@(Model.SelectedPodcast.Id)">
            <h5 class="mb-0">
                Episodes
            </h5>
        </div>
        <div class="card-body m-0 p-0">
            @if (Model.SelectedPodcast.PodcastItems.Any())
            {
                <ul class="list-group list-group-flush">
                    @foreach (var item in Model.SelectedPodcast.PodcastItems.OrderByDescending(item => item.PublishDate))
                    {
                        <li class="list-group-item">
                            <div class="media">
                                <img class="mr-3 track-img" src="@(Url.Content("~/Content/images/audio.png"))" title="@(item.Title)">
                                <div class="media-body">
                                    <h5 class="mt-0">@(item.Title)</h5>
                                    <span>@(item.PublishDate)</span>
                                </div>
                                <div>
                                    <button class="btn btn-outline-secondary" data-tooltip="tooltip" title="@(item.Description)" data-placement="left"
                                            data-html="true">
                                        <i class="fa fa-info-circle"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary" data-play-id="@(item.Id)" onclick="play(this)" data-media-type="@(Enums.MediaTypes.Podcast)"
                                            data-tooltip="tooltip" title="Play">
                                        <i class="fa fa-play"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary" data-download-action="@(Url.Action("DownloadPodcastItem", "Podcast", new { item.Id }))"
                                            data-tooltip="tooltip" title="Download episode" onclick="downloadClicked(this)"
                                            @(Model.DownloadedEpisodes.Contains(item.Id) ? "disabled=\"disabled\"" : string.Empty)>
                                        <i class="fa fa-download"></i>
                                    </button>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <span>No episodes added.</span>
            }
        </div>
    </div>
</div>

@Html.Partial("~/Views/Shared/Modals/DeleteModal.cshtml")
@Html.Partial("~/Views/Shared/Configurations/PodcastConfiguration.cshtml", Model.Configuration)

<script type="text/javascript" defer="defer">
    function backClicked() {
        showLoading();
        $('#txt@(nameof(Model.Configuration.SelectedPodcastPage))').val('@(nameof(Enums.PodcastPages.Index))');
        updateConfiguration(() => loadView('@(nameof(Enums.MediaPages.Podcast))'));
    }

    function refreshClicked() {
        var success = () => loadView('@(nameof(Enums.MediaPages.Podcast))');

        showLoading();
        $.post('@(Url.Action("RefreshPodcast","Podcast"))', { id: @(Model.SelectedPodcast.Id) }, success);

    }

    function downloadClicked(btn) {
        var $btn = $(btn);

        $btn.tooltip('dispose');
        $btn.prop('disabled', 'disabled');
        $.get($btn.attr('data-download-action'));
    }
</script>
