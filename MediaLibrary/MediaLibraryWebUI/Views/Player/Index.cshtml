@using MediaLibraryWebUI.Models.Configurations
@using MediaLibraryWebUI.Repositories
@model MediaLibraryWebUI.Models.PlayerViewModel

@{
    ViewBag.Title = "Player";
}

<div class="w-100 h-100">
    <div class="card w-100 h-100" style="">
        <div class="card-header" style="flex: 0 0 auto">Now Playing</div>
        <div class="card-body d-flex m-0 p-0" style="flex: 1 1 auto; overflow-y: auto">
            <div id="@(HtmlControlsRepository.PlayerItemsContainerId)" class="@(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Index ? string.Empty : "d-none")" style="flex: 1 1 auto"></div>
            <div id="@(HtmlControlsRepository.PlayerAudioContainerId)" style="flex: 1 1 auto" class="@(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Audio ? string.Empty : "d-none")">
                <audio id="@(HtmlControlsRepository.MusicPlayerId)" class="d-none" preload="auto" style="" data-player-page="@(Enums.PlayerPages.Audio)" />
            </div>
            <div id="@(HtmlControlsRepository.PlayerVideoContainerId)" style="flex: 1 1 auto; display: flex" class="@(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Video ? string.Empty : "d-none")">
                <video id="@(HtmlControlsRepository.VideoPlayerId)" preload="auto" style="flex: 1 1 auto" data-player-page="@(Enums.PlayerPages.Video)" />
            </div>
        </div>
        <div class="card-footer d-flex align-items-center" style="flex: 0 0 auto">
            <div class="" style="flex: 0 0 auto">
                <button id="@(HtmlControlsRepository.PlayerPreviousButtonId)" class="btn btn-sm btn-outline-secondary" data-tooltip="tooltip" title="Previous"><i class="fa fa-backward"></i></button>
                <button id="@(HtmlControlsRepository.PlayerPlayButtonId)" class="btn btn-outline-secondary" data-tooltip="tooltip" title="Play"><i class="fa fa-play"></i></button>
                <button id="@(HtmlControlsRepository.PlayerPauseButtonId)" class="btn btn-outline-secondary d-none" data-tooltip="tooltip" title="Pause"><i class="fa fa-pause"></i></button>
                <button id="@(HtmlControlsRepository.PlayerNextButtonId)" class="btn btn-sm btn-outline-secondary" data-tooltip="tooltip" title="Next"><i class="fa fa-forward"></i></button>
            </div>
            <div class="d-flex mr-3 ml-3 flex-row align-items-center" style="flex: 1 1 auto">
                <div id="@(HtmlControlsRepository.PlayerSliderId)" class="mr-3" style="flex: 1 1 auto" data-slide-started="false"></div>
                <div id="@(HtmlControlsRepository.PlayerTimeId)" class="text-muted" style="flex: 0 0 auto">00:00/00:00</div>
            </div>
            <div style="flex: 0 0 auto">
                <button id="@(HtmlControlsRepository.PlayerPlaylistToggleButtonId)" class="btn btn-sm btn-outline-secondary @(Model.Configuration.SelectedPlayerPage == Enums.PlayerPages.Index ? "active" : string.Empty)"
                        data-tooltip="tooltip" title="Show/hide playlist" onclick="togglePlaylist(this)">
                    <i class="fa fa-list-ul"></i>
                </button>
                <button id="@(HtmlControlsRepository.PlayerShuffleButtonId)" class="btn btn-sm btn-outline-secondary" data-tooltip="tooltip" title="Shuffle"><i class="fa fa-random"></i></button>
                <button id="@(HtmlControlsRepository.PlayerRepeatButtonId)" data-repeat-type="@(nameof(Enums.RepeatTypes.None))" class="btn btn-sm btn-outline-secondary @(Model.Configuration.Repeat == Enums.RepeatTypes.None ? string.Empty : "d-none")"
                        data-tooltip="tooltip" title="Repeat off">
                    <i class="fa fa-sync"></i>
                </button>
                <button id="@(HtmlControlsRepository.PlayerRepeatOneButtonId)" data-repeat-type="@(nameof(Enums.RepeatTypes.RepeatOne))" class="btn btn-sm btn-outline-secondary active @(Model.Configuration.Repeat == Enums.RepeatTypes.RepeatOne ? string.Empty : "d-none")"
                        data-tooltip="tooltip" title="Repeat one">
                    <i class="fa fa-xs fa-sync"><sub>1</sub></i>
                </button>
                <button id="@(HtmlControlsRepository.PlayerRepeatAllButtonId)" data-repeat-type="@(nameof(Enums.RepeatTypes.RepeatAll))" class="btn btn-sm btn-outline-secondary active @(Model.Configuration.Repeat == Enums.RepeatTypes.RepeatAll ? string.Empty : "d-none")"
                        data-tooltip="tooltip" title="Repeat all">
                    <i class="fa fa-sync"></i>
                </button>
                <button id="@(HtmlControlsRepository.PlayerVolumeButtonId)" class="btn btn-sm btn-outline-secondary @(Model.Configuration.Volume > 0 ? string.Empty : "d-none")"
                        data-tooltip="tooltip" title="Volume" data-volume="@(Model.Configuration.Volume)">
                    <i class="fa fa-volume-up"></i>
                </button>
                <button id="@(HtmlControlsRepository.PlayerMuteButtonId)" class="btn btn-sm btn-outline-secondary active @(Model.Configuration.Volume == 0 ? string.Empty : "d-none")"
                        data-tooltip="tooltip" title="Muted">
                    <i class="fa fa-volume-mute"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@Html.Partial("~/Views/Shared/Configurations/PlayerConfiguration.cshtml", Model.Configuration)

<script type="text/javascript" defer="defer">
    function _play(item) {
        var $players = $('#@(HtmlControlsRepository.VideoPlayerId), #@(HtmlControlsRepository.MusicPlayerId)'),
            $player = $(getPlayer());

        $players.prop('src', '').attr('data-item-id', '');
        $('#@(HtmlControlsRepository.HeaderPlayButtonId)').addClass('d-none');
        $('#@(HtmlControlsRepository.HeaderPauseButtonId)').removeClass('d-none');

        if (item) {
            var $item = $(item),
                url = $item.attr('data-play-url'),
                index = $item.attr('data-play-index'),
                id = $item.attr('data-item-id');

            $('li[data-play-index].list-group-item').removeClass('active');
            set@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.CurrentItemIndex))(index);
            update@(nameof(PlayerConfiguration))(function () {
                $item.addClass('active');
                $player.attr('data-item-id', id);
                $player.prop('src', url).trigger('play');
                updateScrollTop();
                enableDisablePreviousNext();
            });
        } else if ($('li[data-play-index].active').length === 1) {
            _play($('li[data-play-index].active')[0]);
        }
    }

    function initPlayer() {
        var updatePlayCount = (player, callback) => {
                var id = $(player).attr('data-item-id'),
                    success = typeof (callback) === 'function' ? callback : () => null;

                $.post('@Url.Action("UpdatePlayCount", "Player")', { mediaType: get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.SelectedMediaType))(), id: id }, success);
            },
            shuffle = get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Shuffle))().toLowerCase() === 'true';

        $('#@(HtmlControlsRepository.MusicPlayerId), #@(HtmlControlsRepository.VideoPlayerId)').on('ended', function (e) {
            updatePlayCount(this, playNext);
        });

        $('#@(HtmlControlsRepository.MusicPlayerId), #@(HtmlControlsRepository.VideoPlayerId)').on('durationchange', function (e) {
            $('#@(HtmlControlsRepository.PlayerSliderId)').slider('option', 'max', e.target.duration);
            $('#@(HtmlControlsRepository.PlayerTimeId)').text(getTime(e.target.currentTime, e.target.duration));
        });

        $('#@(HtmlControlsRepository.PlayerSliderId)').on('slide', function (e, ui) {
            if ($(e.target).attr('data-slide-started') === 'true') {
                $(getPlayer()).prop('currentTime', ui.value);
                $('#@(HtmlControlsRepository.PlayerTimeId)').text(getTime(ui.value, $(e.target).slider('option', 'max')));
            }
        });

        $('#@(HtmlControlsRepository.PlayerSliderId)').on('slidestart', function (e, ui) {
            $(e.target).attr('data-slide-started', 'true');
        });

        $('#@(HtmlControlsRepository.PlayerSliderId)').on('slidestop', function (e, ui) {
            $(e.target).attr('data-slide-started', 'false');
        });

        $('#@(HtmlControlsRepository.MusicPlayerId), #@(HtmlControlsRepository.VideoPlayerId)').on('timeupdate', function (e) {
            if ($('#@(HtmlControlsRepository.PlayerSliderId)').attr('data-slide-started') !== 'true') {
                $('#@(HtmlControlsRepository.PlayerSliderId)').slider('value', Math.floor(e.target.currentTime));
                $('#@(HtmlControlsRepository.PlayerTimeId)').text(getTime(e.target.currentTime, e.target.duration));
            }
        });

        $('#@(HtmlControlsRepository.MusicPlayerId), #@(HtmlControlsRepository.VideoPlayerId)').on('play', function (e) {
            $('#@(HtmlControlsRepository.HeaderPlayButtonId), #@(HtmlControlsRepository.PlayerPlayButtonId)').addClass('d-none');
            $('#@(HtmlControlsRepository.HeaderPauseButtonId), #@(HtmlControlsRepository.PlayerPauseButtonId)').removeClass('d-none');
        });

        $('#@(HtmlControlsRepository.MusicPlayerId), #@(HtmlControlsRepository.VideoPlayerId)').on('pause', function (e) {
            $('#@(HtmlControlsRepository.HeaderPauseButtonId), #@(HtmlControlsRepository.PlayerPauseButtonId)').addClass('d-none');
            $('#@(HtmlControlsRepository.HeaderPlayButtonId), #@(HtmlControlsRepository.PlayerPlayButtonId)').removeClass('d-none');
        });

        $('#@(HtmlControlsRepository.MusicPlayerId), #@(HtmlControlsRepository.VideoPlayerId)').on('error', function (e) {
        });

        $('#@(HtmlControlsRepository.HeaderNextButtonId), #@(HtmlControlsRepository.PlayerNextButtonId)').on('click', () => playNext());
        $('#@(HtmlControlsRepository.HeaderPreviousButtonId), #@(HtmlControlsRepository.PlayerPreviousButtonId)').on('click', () => playPrevious());
        $('#@(HtmlControlsRepository.HeaderPauseButtonId), #@(HtmlControlsRepository.PlayerPauseButtonId)').on('click', () => $(getPlayer()).trigger('pause'));
        $('#@(HtmlControlsRepository.HeaderPlayButtonId), #@(HtmlControlsRepository.PlayerPlayButtonId)').on('click', () => $(getPlayer()).trigger('play'));

        $('#@(HtmlControlsRepository.HeaderShuffleButtonId), #@(HtmlControlsRepository.PlayerShuffleButtonId)').addClass(shuffle ? 'active' : '')

        $('button[data-repeat-type]').on('click', () => {
            var repeat = get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Repeat))();

            $('button[data-repeat-type]').addClass('d-none');

            if (repeat === '@nameof(Enums.RepeatTypes.None)') {
                repeat = '@nameof(Enums.RepeatTypes.RepeatOne)';
            } else if (repeat === '@nameof(Enums.RepeatTypes.RepeatOne)') {
                repeat = '@nameof(Enums.RepeatTypes.RepeatAll)';
            } else if (repeat === '@nameof(Enums.RepeatTypes.RepeatAll)') {
                repeat = '@nameof(Enums.RepeatTypes.None)';
            }

            $('button[data-repeat-type="' + repeat + '"]').removeClass('d-none');
            set@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Repeat))(repeat);
            update@(nameof(PlayerConfiguration))();
        });

        $('#@(HtmlControlsRepository.HeaderShuffleButtonId), #@(HtmlControlsRepository.PlayerShuffleButtonId)').on('click', function () {
            var shuffle = isShuffleEnabled(),
                $btns = $('#@(HtmlControlsRepository.HeaderShuffleButtonId), #@(HtmlControlsRepository.PlayerShuffleButtonId)');

            set@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Shuffle))(!shuffle);
            update@(nameof(PlayerConfiguration))(() => {
                if (!shuffle) {
                    $btns.addClass('active');
                } else {
                    $btns.removeClass('active');
                }
            });
        });

        $('#@(HtmlControlsRepository.PlayerVolumeButtonId), #@(HtmlControlsRepository.PlayerMuteButtonId)').on('click', function (e) {
            var volume = parseInt(get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Volume))()),
                previousVolume = parseInt($('#@(HtmlControlsRepository.PlayerVolumeButtonId)').attr('data-volume'));
            
            $('#@(HtmlControlsRepository.PlayerVolumeButtonId), #@(HtmlControlsRepository.PlayerMuteButtonId)').addClass('d-none');
            $(volume === 0 ? '#@(HtmlControlsRepository.PlayerVolumeButtonId)' : '#@(HtmlControlsRepository.PlayerMuteButtonId)').removeClass('d-none');
            set@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Volume))(volume === 0 ? previousVolume : 0);
            update@(nameof(PlayerConfiguration))(() => $(getPlayer()).prop('volume', volume === 0 ? previousVolume / 100.0 : 0));
        });

        $('#@(HtmlControlsRepository.PlayerSliderId)').slider({ min: 0, max: 100 });
        $('button[data-repeat-type="' + get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Repeat))() + '"]').removeClass('d-none');
        reload(() => enableDisablePreviousNext());
    }

    function playNext() {
        var nextIndex = isShuffleEnabled() ? getRandomInteger(0, $('li[data-play-index]').length - 1) :
                                             parseInt(get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.CurrentItemIndex))()) + 1,
            $item = null,
            repeat = get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Repeat))();

        if (repeat === '@(nameof(Enums.RepeatTypes.RepeatOne))') {
            _play();
        } else if (repeat === '@(nameof(Enums.RepeatTypes.RepeatAll))') {
            if (nextIndex === $('li[data-play-index]').length) {
                $item = $('li[data-play-index="0"]');
                _play($item[0]);
            } else {
                $item = $('li[data-play-index="' + nextIndex + '"]');
                _play($item[0]);
            }
        } else {
            $item = $('li[data-play-index=' + nextIndex + ']');

            if (nextIndex !== $('li[data-play-index]').length) {
                _play($item[0]);
            }
        }
    }

    function canPlayNext() {
        return parseInt($('li.active').attr('data-play-index')) < ($('li[data-play-index]').length - 1);
    }

    function canPlayPrevious() {
        return true;
    }

    function isShuffleEnabled() {
        return get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.Shuffle))().toLowerCase() === 'true';
    }

    function enableDisablePreviousNext() {
        $('#@(HtmlControlsRepository.HeaderNextButtonId), #@(HtmlControlsRepository.PlayerNextButtonId)').prop('disabled', !canPlayNext());
        $('#@(HtmlControlsRepository.HeaderPreviousButtonId), #@(HtmlControlsRepository.PlayerPreviousButtonId)').prop('disabled', !canPlayPrevious());
    }

    function playPrevious() {
        var previousIndex = isShuffledEnabled() ? getRandomInteger(0, $('li[data-play-index]').length - 1) :
                                                  parseInt(get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.CurrentItemIndex))()) - 1,
            $item = $('li[data-play-index="' + previousIndex + '"]');

        _play($item[0]);
    }

    function reload(callback) {
        var success = () => {
            setInitialPlayerUrl();
            updateScrollTop();
            $('#@(HtmlControlsRepository.PlayerItemsContainerId) *[data-tooltip="tooltip"]').tooltip({ trigger: 'hover' });
            if (typeof callback === 'function') /*then*/ callback();
        };

        $('#@(HtmlControlsRepository.PlayerItemsContainerId)').html('');
        $('#@(HtmlControlsRepository.PlayerItemsContainerId)').load('@(Url.Action("GetPlayerItems", "Player"))', success);
    }

    function updateScrollTop() {
        var $item = $('li.active');

        if ($item.length > 0) {
            $('#@(HtmlControlsRepository.PlayerItemsContainerId)').scrollTop($('#@(HtmlControlsRepository.PlayerItemsContainerId)').scrollTop() - $item.position().top * -1);
        }
    }

    function setInitialPlayerUrl() {
        var url = $('li.active').attr('data-play-url'),
            id = $('li.active').attr('data-item-id');

        $(getPlayer()).attr('data-item-id', id).prop('src', url);
    }

    function getPlayer() {
        var $audioPlayer = $('#@(HtmlControlsRepository.MusicPlayerId)'),
            $videoPlayer = $('#@(HtmlControlsRepository.VideoPlayerId)'),
            selectedMediaType = get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.SelectedMediaType))();

        return selectedMediaType === '@(Enums.MediaTypes.Television)' ? $videoPlayer[0] : $audioPlayer[0];
    }

    function togglePlaylist(btn) {
        var page = get@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.SelectedPlayerPage))(),
            $player = $(getPlayer()),
            $playerItems = $('#@(HtmlControlsRepository.PlayerItemsContainerId)'),
            $btn = $(btn);

        if (page === '@(nameof(Enums.PlayerPages.Index))') {
            set@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.SelectedPlayerPage))($player.attr('data-player-page'));
            $player.parent().removeClass('d-none');
            $playerItems.addClass('d-none');
            $btn.removeClass('active');
        } else {
            set@(nameof(PlayerConfiguration))_@(nameof(PlayerConfiguration.SelectedPlayerPage))('@(nameof(Enums.PlayerPages.Index))');
            $player.parent().addClass('d-none');
            $playerItems.removeClass('d-none');
            $btn.addClass('active');
        }
        update@(nameof(PlayerConfiguration))();
    }

    function getTime(time, duration) {
        var adjustedTime = isNaN(time) ? 0 : time,
            adjustedDuration = isNaN(duration) ? 0 : duration,
            totalHours = Math.floor(adjustedDuration / 3600),
            totalMinutes = Math.floor((adjustedDuration - (totalHours * 3600)) / 60),
            totalSeconds = Math.floor((adjustedDuration - (totalMinutes * 60 + totalHours * 3600)) % 60),
            totalTime = (totalHours > 0 ? String(totalHours).padStart(2, '0') + ':' : '') + String(totalMinutes).padStart(2, '0') + ':' + String(totalSeconds).padStart(2, '0'),
            currentHours = Math.floor(adjustedTime / 3600),
            currentMinutes = Math.floor((adjustedTime - (currentHours * 3600)) / 60),
            currentSeconds = Math.floor((adjustedTime - (currentMinutes * 60 + currentHours * 3600)) % 60),
            currentTime = (currentHours > 0 ? String(currentHours).padStart(2, '0') + ':' : '') + String(currentMinutes).padStart(2, '0') + ':' + String(currentSeconds).padStart(2, '0');

        return currentTime + '/' + totalTime;
    }

    initPlayer();
</script>

