@using MediaLibraryWebUI.Models.Configurations
@using MediaLibraryWebUI.Repositories
@model MediaLibraryWebUI.Models.PlaylistViewModel

@{
    ViewBag.Title = "Playlists";
}

<div class="d-flex flex-column" style="flex: 1 1 auto; overflow-y: auto">
    <div style="flex: 0 0 auto">
        <h2>Playlists</h2>
        <div>
            <button type="button" class="btn btn-outline-secondary" data-toggle="modal" data-target="#@(HtmlControlsRepository.NewPlaylistModalId)" data-tooltip="tooltip" title="Add playlist"><i class="fa fa-plus"></i></button>
            <div class="float-right">
                @Html.DropDownListFor(x => x.Configuration.SelectedPlaylistSort,
                                     Model.PlaylistSortItems,
                                     null,
                                     new { @class = "custom-select border border-secondary",
                                           style = "width: 135px",
                                           title = "Sort by",
                                           onchange = "sortChanged(this)",
                                           data_tooltip = "tooltip"
                })
            </div>
        </div>
        <hr />
    </div>

    @if (Model.PlaylistGroups.Any())
    {
        <div id="accordion-playlists" style="flex: 1 1 auto; overflow-y: auto">
            @foreach (var item in Model.PlaylistGroups.Select((group, index) => new { Index = index, Group = group }))
            {
                <div class="card">
                    <div class="card-header" id="heading-playlists-@(item.Index)">
                        <h5 class="mb-0">
                            <button class="btn btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)" aria-expanded="@(item.Index == 0 ? "true" : "false")" aria-controls="collapse-playlists-@(item.Index)">
                                @(item.Group.Key)
                            </button>
                        </h5>
                    </div>

                    <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == 0 ? "show" : "")" aria-labelledby="heading-playlists-@(item.Index)" data-parent="#accordion-playlists">
                        <ul class="list-group list-group-flush">
                            @foreach (var playlist in item.Group)
                            {
                                <li class="list-group-item">
                                    <div class="media">
                                        <img class="mr-3 track-img" src="@(Url.Content("~/Content/images/audio.png"))" title="@(playlist.Name)">
                                        <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                            <h5 class="mt-0 text-truncate" style="flex: 0 0 auto">@(playlist.Name)</h5>
                                            <span style="cursor: pointer; flex: 0 0 auto">@(playlist.PlaylistTracks.Count()) song@(playlist.PlaylistTracks.Count() == 1 ? string.Empty : "s")</span>
                                        </div>
                                        <div>
                                            <button class="btn btn-outline-secondary" onclick="playlistClicked(this)" data-item-id="@(playlist.Id)"
                                                    data-tooltip="tooltip" title="View playlist">
                                                <i class="fa fa-list"></i>
                                            </button>
                                            <button class="btn btn-outline-danger" data-delete-action="@(Url.Action("RemovePlaylist", "Playlist", new { playlist.Id }))"
                                                    data-tooltip="tooltip" title="Delete playlist" data-delete-type="playlist" data-refresh-view="@(nameof(Enums.MediaPages.Playlist))"
                                                    data-target="#@(HtmlControlsRepository.DeleteModalId)" data-toggle="modal">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div>No playlists.</div>
    }
</div>

@Html.Partial("~/Views/Shared/Modals/DeleteModal.cshtml")
@Html.Partial("~/Views/Shared/Modals/AddNewPlaylistModal.cshtml")

<script type="text/javascript">
    function playlistClicked(btn) {
        showLoading();
        set@(nameof(PlaylistConfiguration))_@(nameof(PlaylistConfiguration.SelectedPlaylistPage))('@(nameof(Enums.PlaylistPages.Playlist))');
        set@(nameof(PlaylistConfiguration))_@(nameof(PlaylistConfiguration.SelectedPlaylistId))($(btn).attr('data-item-id'));
        update@(nameof(PlaylistConfiguration))(() => loadView('@(nameof(Enums.PlaylistPages.Playlist))'));
    }

    function sortChanged(select) {
        showLoading();
        set@(nameof(PlaylistConfiguration))_@(nameof(PlaylistConfiguration.SelectedPlaylistSort))($(select).val());
        update@(nameof(PlaylistConfiguration))(() => loadView('@(nameof(Enums.PlaylistPages.Playlist))'));
    }
    
    function handle@(Enums.MediaPages.Playlist)Loaded() {
    }
</script>
