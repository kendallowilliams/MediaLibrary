@model MediaLibraryWebUI.Models.PlaylistViewModel

@{
    var musicPlaylistGroups = Model.PlaylistGroups.Where(group => group.Any(playlist => playlist.Type == (int)UIEnums.PlaylistTabs.Music));
    var podcastPlaylistGroups = Model.PlaylistGroups.Where(group => group.Any(playlist => playlist.Type == (int)UIEnums.PlaylistTabs.Podcast));
    var episodePlaylistGroups = Model.PlaylistGroups.Where(group => group.Any(playlist => playlist.Type == (int)UIEnums.PlaylistTabs.Episode));

    ViewBag.Title = "Playlists";
}

<div class="d-flex flex-column" style="flex: 1 1 auto; overflow-y: auto">
    <div style="flex: 0 0 auto">
        <h2>Playlists</h2>
        <div class="nav d-block p-1" id="@(HtmlControlsRepository.PlaylistTabListId)" role="tablist">
            <a class="btn btn-outline-secondary" id="@(HtmlControlsRepository.MusicPlaylistContainerId)-tab" data-toggle="tab"
               role="tab" title="@(nameof(UIEnums.PlaylistTabs.Music))" data-playlist-tab="@(nameof(UIEnums.PlaylistTabs.Music))"
               data-tooltip="tooltip" href="#@(HtmlControlsRepository.MusicPlaylistContainerId)">
                <i class="fa fa-compact-disc"></i>
            </a>
            <a class="btn btn-outline-secondary" id="@(HtmlControlsRepository.PodcastPlaylistContainerId)-tab" data-toggle="tab"
               role="tab" title="@(nameof(UIEnums.PlaylistTabs.Podcast))" data-playlist-tab="@(nameof(UIEnums.PlaylistTabs.Podcast))"
               data-tooltip="tooltip" href="#@(HtmlControlsRepository.PodcastPlaylistContainerId)">
                <i class="fa fa-podcast"></i>
            </a>
            <a class="btn btn-outline-secondary" id="@(HtmlControlsRepository.EpisodePlaylistContainerId)-tab" data-toggle="tab"
               role="tab" title="@(nameof(UIEnums.PlaylistTabs.Episode))" data-playlist-tab="@(nameof(UIEnums.PlaylistTabs.Episode))"
               data-tooltip="tooltip" href="#@(HtmlControlsRepository.EpisodePlaylistContainerId)">
                <i class="fa fa-tv"></i>
            </a>
            <div class="float-right d-none d-lg-block">
                <button type="button" class="btn btn-outline-secondary" data-toggle="modal" data-target="#@(HtmlControlsRepository.NewPlaylistModalId)" data-tooltip="tooltip" title="Add playlist"><i class="fa fa-plus"></i></button>
                @Html.DropDownListFor(x => x.Configuration.SelectedPlaylistSort,
                                        Model.PlaylistSortItems,
                                        null,
                                        new
                                            {
                                                @class = "custom-select border border-secondary",
                                            style = "width: 135px",
                                            title = "Sort by",
                                            data_playlist_action = "sort",
                                            data_tooltip = "tooltip"
                })
            </div>
        </div>
        <hr />
    </div>
    <div class="tab-content" style="flex: 1 1 auto; overflow-y: auto">
        <div class="tab-pane fade" id="@(HtmlControlsRepository.MusicPlaylistContainerId)" role="tabpanel">
            @if (musicPlaylistGroups.Any())
            {
                <div id="accordion-playlists" style="flex: 1 1 auto; overflow-y: auto">
                    @foreach (var item in musicPlaylistGroups.Select((group, index) => new { Index = index, Group = group }))
                    {
                        <div class="card">
                            <div class="card-header" id="heading-playlists-@(item.Index)">
                                <h5 class="mb-0">
                                    <button class="btn btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)" aria-expanded="@(item.Index == 0 ? "true" : "false")" aria-controls="collapse-playlists-@(item.Index)">
                                        @(item.Group.Key)
                                    </button>
                                </h5>
                            </div>

                            <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == 0 ? "show" : "")" aria-labelledby="heading-playlists-@(item.Index)" data-parent="#accordion-playlists">
                                <ul class="list-group list-group-flush">
                                    @foreach (var playlist in item.Group.Where(playlist => playlist.Type == (int)UIEnums.PlaylistTabs.Music))
                                    {
                                        <li class="list-group-item">
                                            <div class="media">
                                                <img class="mr-3 track-img" src="@(Url.Content("~/Content/images/audio.png"))" title="@(playlist.Name)">
                                                <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                    <h5 class="mt-0 text-truncate" style="flex: 0 0 auto">@(playlist.Name)</h5>
                                                    <span style="cursor: pointer; flex: 0 0 auto">@(playlist.PlaylistTracks.Count()) song@(playlist.PlaylistTracks.Count() == 1 ? string.Empty : "s")</span>
                                                </div>
                                                <div>
                                                    <button class="btn btn-outline-secondary" data-playlist-id="@(playlist.Id)" data-tooltip="tooltip" title="View playlist">
                                                        <i class="fa fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" data-delete-action="@(Url.Action("RemovePlaylist", "Playlist", new { playlist.Id }))"
                                                            data-tooltip="tooltip" title="Delete playlist" data-delete-type="playlist" data-refresh-view="@(nameof(UIEnums.MediaPages.Playlist))"
                                                            data-target="#@(HtmlControlsRepository.DeleteModalId)" data-toggle="modal">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div>No playlists.</div>
            }
        </div>
        <div class="tab-pane fade" id="@(HtmlControlsRepository.PodcastPlaylistContainerId)" role="tabpanel">
            @if (podcastPlaylistGroups.Any())
            {
                <div id="accordion-playlists" style="flex: 1 1 auto; overflow-y: auto">
                    @foreach (var item in podcastPlaylistGroups.Select((group, index) => new { Index = index, Group = group }))
                    {
                        <div class="card">
                            <div class="card-header" id="heading-playlists-@(item.Index)">
                                <h5 class="mb-0">
                                    <button class="btn btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)" aria-expanded="@(item.Index == 0 ? "true" : "false")" aria-controls="collapse-playlists-@(item.Index)">
                                        @(item.Group.Key)
                                    </button>
                                </h5>
                            </div>

                            <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == 0 ? "show" : "")" aria-labelledby="heading-playlists-@(item.Index)" data-parent="#accordion-playlists">
                                <ul class="list-group list-group-flush">
                                    @foreach (var playlist in item.Group.Where(playlist => playlist.Type == (int)UIEnums.PlaylistTabs.Podcast))
                                    {
                                        <li class="list-group-item">
                                            <div class="media">
                                                <img class="mr-3 track-img" src="@(Url.Content("~/Content/images/audio.png"))" title="@(playlist.Name)">
                                                <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                    <h5 class="mt-0 text-truncate" style="flex: 0 0 auto">@(playlist.Name)</h5>
                                                    <span style="cursor: pointer; flex: 0 0 auto">@(playlist.PlaylistPodcastItems.Count()) episode@(playlist.PlaylistPodcastItems.Count() == 1 ? string.Empty : "s")</span>
                                                </div>
                                                <div>
                                                    <button class="btn btn-outline-secondary" data-playlist-id="@(playlist.Id)" data-tooltip="tooltip" title="View playlist">
                                                        <i class="fa fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" data-delete-action="@(Url.Action("RemovePlaylist", "Playlist", new { playlist.Id }))"
                                                            data-tooltip="tooltip" title="Delete playlist" data-delete-type="playlist" data-refresh-view="@(nameof(UIEnums.MediaPages.Playlist))"
                                                            data-target="#@(HtmlControlsRepository.DeleteModalId)" data-toggle="modal">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div>No playlists.</div>
            }
        </div>
        <div class="tab-pane fade" id="@(HtmlControlsRepository.EpisodePlaylistContainerId)" role="tabpanel">
            @if (episodePlaylistGroups.Any())
            {
                <div id="accordion-playlists" style="flex: 1 1 auto; overflow-y: auto">
                    @foreach (var item in episodePlaylistGroups.Select((group, index) => new { Index = index, Group = group }))
                    {
                        <div class="card">
                            <div class="card-header" id="heading-playlists-@(item.Index)">
                                <h5 class="mb-0">
                                    <button class="btn btn-link w-100 text-left" data-toggle="collapse" data-target="#collapse-playlists-@(item.Index)" aria-expanded="@(item.Index == 0 ? "true" : "false")" aria-controls="collapse-playlists-@(item.Index)">
                                        @(item.Group.Key)
                                    </button>
                                </h5>
                            </div>

                            <div id="collapse-playlists-@(item.Index)" class="collapse @(item.Index == 0 ? "show" : "")" aria-labelledby="heading-playlists-@(item.Index)" data-parent="#accordion-playlists">
                                <ul class="list-group list-group-flush">
                                    @foreach (var playlist in item.Group.Where(playlist => playlist.Type == (int)UIEnums.PlaylistTabs.Episode))
                                    {
                                        <li class="list-group-item">
                                            <div class="media">
                                                <img class="mr-3 track-img" src="@(Url.Content("~/Content/images/audio.png"))" title="@(playlist.Name)">
                                                <div class="media-body d-flex flex-column" style="overflow-x: auto">
                                                    <h5 class="mt-0 text-truncate" style="flex: 0 0 auto">@(playlist.Name)</h5>
                                                    <span style="cursor: pointer; flex: 0 0 auto">@(playlist.PlaylistEpisodes.Count()) episode@(playlist.PlaylistEpisodes.Count() == 1 ? string.Empty : "s")</span>
                                                </div>
                                                <div>
                                                    <button class="btn btn-outline-secondary" data-playlist-id="@(playlist.Id)" data-tooltip="tooltip" title="View playlist">
                                                        <i class="fa fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" data-delete-action="@(Url.Action("RemovePlaylist", "Playlist", new { playlist.Id }))"
                                                            data-tooltip="tooltip" title="Delete playlist" data-delete-type="playlist" data-refresh-view="@(nameof(UIEnums.MediaPages.Playlist))"
                                                            data-target="#@(HtmlControlsRepository.DeleteModalId)" data-toggle="modal">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div>No playlists.</div>
            }
        </div>
    </div>

</div>

@Html.Partial("~/Views/Shared/Modals/AddNewPlaylistModal.cshtml")